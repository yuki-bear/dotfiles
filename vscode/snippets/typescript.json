{
	"Print to console": {
		"prefix": "log",
		"body": [
			"console.log('$1');",
			"$2"
		],
		"description": "Log output to console"
	},

	"vari": {
		"prefix": "vari",
		"body": [
			"${1:const} ${2:name}$3 = ${4:value};",
			"$0",
		],
		"description": "let initialization"
	},

	"varimap": {
		"prefix": "varimap",
		"body": [
			"const ${1:map} = new Map<${2:number}, ${3:number}>($0);",
		],
		"description": "Map initialization"
	},

	"variset": {
		"prefix": "variset",
		"body": [
			"const ${1:set} = new Set<${2:number}>($0);",
		],
		"description": "Set initialization"
	},

	"function": {
		"prefix": "fn",
		"body": [
			"function ${1:func}($2)$3 {",
			"\t$0",
			"}",
		],
		"description": "function definition"
	},

	"basic DFS form": {
		"prefix": "dfsf",
		"body": [
			"function ${1:dfs}(node: BinaryTreeNode<number> | null): ${2:void} {",
			"\tif (!node) {",
			"\t\treturn$0;",
			"\t}",
			"",
			"\tconst { left, right } = node;",
			"",
			"\tif (left) {",
			"\t\t$1(left);",
			"\t}",
			"\tif (right) {",
			"\t\t$1(right);",
			"\t}",
			"}",
		],
		"description": "Basic format of DFS"
	},

	"basic BFS form": {
		"prefix": "bfsf",
		"body": [
			"const ${1:queue}$2 = [];",
			"",
			"while ($1.length > 0) {",
			"\tconst ${3:next} = $1.shift();",
			"",
			"\t$0",
			"",
			"\t$1.push(data);",
			"}",
		],
		"description": "Basic format of DFS"
	},
}